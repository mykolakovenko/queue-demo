Parameters:
  BucketName:
    Type: String
    Description: The name of the S3 bucket to create

  VpcId:
    Type: AWS::EC2::VPC::Id

Resources:
  IAMPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: queue-demo-iam-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"

  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: queue-demo-ec2-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - !Ref IAMPolicy

  EC2RoleInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2Role

  IAMUser:
    Type: AWS::IAM::User
    Properties:
      UserName: queue-demo-user
      ManagedPolicyArns:
        - !Ref IAMPolicy

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
            Principal: "*"

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for queue demo
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: queue-demo-web-server
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Egress to everywhere
          FromPort: 0
          IpProtocol: "-1"
          ToPort: 65535
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: SSH from anywhere
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          Description: Http from anywhere
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp

  WebEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref EC2RoleInstanceProfile
      ImageId: ami-014571f1593b7be25 # Depends on the region. Replace hardcoded value
      InstanceType: t2.micro
      SecurityGroupIds:
        - !Ref WebSecurityGroup
      Tags:
        - Key: Name
          Value: queue-demo-single

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: mkovenko.rocks.
      Name: queue-demo-single-instance.mkovenko.rocks
      Type: A
      TTL: '60'
      ResourceRecords:
        - !GetAtt WebEC2Instance.PublicIp
